{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/array.js","../src/utils.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["\n//  匹配属性  a=b  a=\"b\"  a='b' 三种情况      aa  =  “  XXX ” | ‘  XXX  ’  |  XXX\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n\nconst ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\".concat(unicodeRegExp.source, \"]*\");  // 标签名 \n\nconst qnameCapture = \"((?:\".concat(ncname, \"\\\\:)?\").concat(ncname, \")\");\n\nconst startTagOpen = new RegExp(\"^<\".concat(qnameCapture));  // 匹配开始标签\n\nconst startTagClose = /^\\s*(\\/?)>/;   //   />  <div/> \n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{  }}\n\nconst endTag = new RegExp(\"^<\\\\/\".concat(qnameCapture, \"[^>]*>\")); // 匹配闭合标签\n\n//  html标签解析成ast树  \nexport function compileToFunction(template) {\n    parserHTML(template);\n}\n // htmlparser2 第三方插件与parserHTML一样  把html转化成ast语法树\nfunction parserHTML(html) {\n    \n}\nfunction start(tagName, attributes) {}\nfunction end(tagName) {}\nfunction chars(text) {}","let oldArrayPrototype = Array.prototype;\nexport let arrayMethods = Object.create(oldArrayPrototype);\n\nlet methods = ['push', 'shift', 'pop', 'unshift', 'reverse', 'splice', 'sort'];\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        // args参数列表  arr.push(1,2,3)  ...args = [1,2,3]\n        // 方法劫持 搞事情....\n        oldArrayPrototype[method].call(this, ...args)\n\n        //  如果数组方法新添加的值是一个对象 则同样需要进行观测\n        let inserted;  // 新添加的值\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n                break;\n\n        }\n        let ob = this.__ob__;\n        if (inserted) ob.observeArray(inserted);\n        //  todo 更新操作\n    }\n})\n\n//  Object.create(); 方法第一个参数为某对象的原型 本质是新创建的对象继承传入参数对象的原型\n","export function isfn(fn){\n    return typeof fn === \"function\";\n}\n\nexport function isObject(obj){\n  return typeof obj =='object' && obj != null;\n}","import { arrayMethods } from \"../array\";\nimport { isObject } from \"../utils\";\n//数据观察者模式\nexport function observe(data) {\n   // vue2中会将所有的data数据进行数据劫持？什么是数据劫持？ Object.defineproperty \n   // 如果是对象才进行观测\n   if (!isObject(data)) {\n      return;\n   }\n   if (data.__ob__) {  // 如果数据有__ob__则说明数据已经被观测了，则无需观测\n      return;\n   }\n   // 进行观测  默认最外层的data必须是一个对象\n   return new Observer(data);\n}\n// 检测数据的变化 \nclass Observer {\n   constructor(data) {  // 对对象中的所有属性进行劫持\n      // data.__ob__ = this;  将观测者实例挂载到观测的data数据上, 不能直接添加，会递归observe \n      Object.defineProperty(data, \"__ob__\", {\n         value: this,\n         enumerable: false\n      });\n      if (Array.isArray(data)) {\n         // 数据劫持的逻辑  劫持数组的变异方法（变异方法:指操作方法可能会改变原数组如： push shift pop 而contact不是变异方法，因其不会改变原数组）\n         // 对数组原来的方法进行改写（重写？）----> 切片编程 高阶函数\n         data.__proto__ = arrayMethods;\n         // 如果数组中的数据是对象，则需要对对象进行劫持 [{key:value}, {key:value}]\n         this.observeArray(data);\n\n      } else {\n         this.walk(data); // 对象劫持的逻辑\n      }\n   }\n   observeArray(data) {\n      data.forEach(item => {\n         observe(item);\n      });\n   }\n   // 劫持对象\n   walk(data) { // data数据对象\n      Object.keys(data).forEach(key => {\n         defineReactive(data, key, data[key])\n      })\n   }\n}\n// vue2会对对象进行遍历(递归)， 将每个对象用 Object.defineProperty重新定义， 性能差!!!\nfunction defineReactive(data, key, value) {\n   observe(value);  // 如果对象属性的值为对象，则递归劫持对象属性 ，所以在使用Vue2的时候，尽量将数据扁平化不要过多嵌套  \n   Object.defineProperty(data, key, {\n      get() {\n         return value;\n      },\n      set(newValue) {\n\n         // todo 用户更改了数据.....\n         observe(newValue); // 如果对象的某个属性重新赋的值也是一个对象，则也需要被劫持。\n         value = newValue;\n      }\n   });\n}\n\n/**\n * 问题： 给data添加属性会被劫持到吗？\n * \n *总结 ： 如果是对象，会对对象进行递归劫持\n         如果是数组 会劫持数组的方法，并对数组中不是基本数据类型的数据进行检测 \n * \n * \n * \n * */\n\n","import { observe } from \"./observer/index\";\nimport { isfn } from \"./utils\";\n// 数据状态初始化\nexport function initState(vm) {\n  const opts = vm.$options;\n  if (opts.data) {\n    initData(vm);\n  }\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data;\n  // 此时data和vm没有任何关系  data = isfn(data) ? data.call(vm) : data;  解决：\n  data = vm._data = isfn(data) ? data.call(vm) : data; // 判断data是函数还是json对象 \n  // vm.name ----> vm._data.name\n  for (let key in data) {\n    proxy(vm, \"_data\", key);\n  }\n  observe(data);\n}\n\n// 属性代理  当调用vm.name 则在 vm._data.name获取\nfunction proxy(vm, source, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key];\n    },\n    set(newValue) {\n      vm[source][key] = newValue;\n    }\n  });\n}\n\n","import { compileToFunction } from \"./compiler/index\";\nimport { initState } from \"./state\";\n// initMixin函数用于在vue原型添加init初始化方法\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        const vm = this;\n        vm.$options = options;\n\n        // 对数据进行初始化 data el methods computed props\n        initState(vm);\n\n        // 模板编译\n        if(vm.$options.el){\n            //  将数据挂载到模板上\n            vm.$mount(vm.$options.el);\n        }\n    }\n    Vue.prototype.$mount=function(el){\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n        //  1 把模板转化成对应的渲染函数===> 虚拟DOM概念 vnode====> diff算法更新虚拟DOM====>产生真实节点 更新\n        if(!options.render){\n            let template =  options.template;\n            if(!template && el ){\n                 template = el.outerHTML;\n                 let render = compileToFunction(template);\n                 options.render = render;  // options.render函数就是渲染函数\n            }\n\n        }\n    }\n}\n","import { initMixin } from \"./init\";\n// 定义Vue构造函数 \nfunction Vue(options) {\n    this._init(options);  // options vue实例的配置项{ el data methods等}\n}\ninitMixin(Vue); // 此函数将_init方法添加到Vue原型上\nexport default Vue;\n\n"],"names":["concat","unicodeRegExp","source","compileToFunction","template","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","slice","ob","__ob__","observeArray","isfn","fn","isObject","obj","observe","data","Observer","defineProperty","value","enumerable","isArray","__proto__","walk","item","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","initData","_data","proxy","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}